#!/bin/sh
#
#
#       Resource Agent for AWS EC2 Virtual PrivateIP
#
# Copyright (c) 2014 mooapp All Rights Reserved.
# Copyright (c) 2015 F@N Communications, Inc. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of version 2 of the GNU General Public License as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it would be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# Further, this software is distributed without any warranty that it is
# free of the rightful claim of any third person regarding infringement
# or the like.  Any license provided herein, whether implied or
# otherwise, applies only to this software file.  Patent licenses, if
# any, provided herein do not apply to combinations of this program with
# other software, or any other product whatsoever.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write the Free Software Foundation,
# Inc., 59 Temple Place - Suite 330, Boston MA 02111-1307, USA.
#

#######################################################################
# Initialization:

: ${OCF_FUNCTIONS_DIR=${OCF_ROOT}/lib/heartbeat}
. ${OCF_FUNCTIONS_DIR}/ocf-shellfuncs

# IAM Roleが設定されていないインスタンスの場合は、なんらかの手段で権限をつけてください。
# 下記をコメントアウトして適切なアクセスキーを設定すれば動きます。
# export AWS_ACCESS_KEY_ID=*****************
# export AWS_SECRET_ACCESS_KEY=*****************
# export AWS_DEFAULT_REGION=*****************

#######################################################################

meta_data() {
        cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="ec2vip" version="0.9">
<version>1.0</version>

<longdesc lang="en">
This is a Resource Agent for AWS EC2 Virtual PrivateIP (Not Elastic IP Address).
</longdesc>
<shortdesc lang="en">AWS EC2 VIP resource agent</shortdesc>

<parameters>
<parameter name="ec2_vip" required="1">
<longdesc lang="en">
The Virtual Private IP address
</longdesc>
<shortdesc lang="en">EC2 VIP</shortdesc>
<content type="string" />
</parameter>

</parameters>

<actions>
<action name="start"        timeout="20" />
<action name="stop"         timeout="20" />
<action name="monitor"      timeout="20" interval="10" depth="0" />
<action name="meta-data"    timeout="5" />
<action name="validate-all"   timeout="20" />
</actions>
</resource-agent>
END
}

#######################################################################

ec2vip_usage() {
        cat <<END
usage: $0 {start|stop|monitor|validate-all|meta-data}

Expects to have a fully populated OCF RA-compliant environment set.
END
}

ec2vip_start() {
    ec2vip_monitor
    if [ $? =  $OCF_SUCCESS ]; then
        return $OCF_SUCCESS
    fi
    /usr/bin/aws ec2 assign-private-ip-addresses --network-interface-id ${eni_id} --private-ip-addresses ${OCF_RESKEY_ec2_vip} --allow-reassignment
}

ec2vip_stop() {
    ec2vip_monitor
    if [ $? =  $OCF_SUCCESS ]; then
        /usr/bin/aws ec2 unassign-private-ip-addresses --network-interface-id ${eni_id} --private-ip-addresses ${OCF_RESKEY_ec2_vip}
    fi
    return $OCF_SUCCESS
}

ec2vip_monitor() {

    mon=`aws ec2 describe-network-interfaces --network-interface-ids ${eni_id} | grep ${OCF_RESKEY_ec2_vip} | grep "PrivateIpAddress" | wc -l`
    if [ $mon -ne 0  ]; then
        return $OCF_SUCCESS
    fi
    return $OCF_NOT_RUNNING
}

ec2vip_validate() {
    return $OCF_SUCCESS
}

instance_id=`wget -q -O - http://169.254.169.254/latest/meta-data/instance-id`
local_ipv4=`wget -q -O -  http://169.254.169.254/latest/meta-data/local-ipv4`
eni_id=`/usr/bin/aws ec2 describe-network-interfaces --output text --filters "Name=addresses.private-ip-address,Values=$local_ipv4" --query "NetworkInterfaces[].NetworkInterfaceId" `

case $__OCF_ACTION in
meta-data)      meta_data
                exit $OCF_SUCCESS
                ;;
start)          ec2vip_start;;
stop)           ec2vip_stop;;
monitor)        ec2vip_monitor;;
validate-all)   ec2vip_validate;;
usage|help)     ec2vip_usage
                exit $OCF_SUCCESS
                ;;
*)              ec2vip_usage
                exit $OCF_ERR_UNIMPLEMENTED
                ;;
esac
rc=$?
ocf_log debug "${OCF_RESOURCE_INSTANCE} $__OCF_ACTION : $rc"
exit $rc
