AWSTemplateFormatVersion: "2010-09-09"
Description: Provision EC2 for pacemaker

Parameters:
  KeyName:
    Description: The EC2 Key Pair to allow SSH Access to the instance
    Type: "AWS::EC2::KeyPair::KeyName"
  MyIP:
    Description: IP address allowed to access EC2
    Type: String
  # RHEL HA 8.5
  Ec2ImageId:
    Type: String
    Default: ami-036d6e5989760d528
  Ec2InstanceType:
    Type: String
    Default: t3.small

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.5.0.0/16
      Tags:
        - Key: Name
          Value: vpc-cf

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: igw-cf

  # IGWをVPCにアタッチ
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  PubSubA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPC
      CidrBlock: 10.5.10.0/24
      Tags:
        - Key: Name
          Value: pub-sub-a-cf

  PubSubRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: pub-sub-rt-cf

  # PubSub-インターネット間のルーティング
  PubSubToInternet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PubSubRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW

  # ルートテーブルをサブネットに関連付け
  AssoPubSubART:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubA
      RouteTableId: !Ref PubSubRT

  # pacemaker node1
  EC2Pacemaker1: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !Ref Ec2ImageId
      KeyName: !Ref KeyName
      InstanceType: !Ref Ec2InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: !Ref PubSubA
          PrivateIpAddress: 10.5.10.11
          GroupSet:
            - !Ref EC2PacemakerSG
      UserData: !Base64 |
        #!/bin/bash
        # hostnameとhostsの設定 
        hostnamectl set-hostname ec2-pacemaker-1-cf
        cat <<EOF | sudo tee -a /etc/hosts
        10.5.10.11 ec2-pacemaker-1-cf
        10.5.10.12 ec2-pacemaker-2-cf
        10.5.10.13 ec2-pacemaker-vip-cf
        EOF

        # set JP timezone
        timedatectl set-timezone Asia/Tokyo

        # install
        # inscall necessafy packages
        dnf update -y
        dnf install -y wget unzip
        dnf install -y fence-agents-aws jq

        # install and start SSM Agent
        dnf install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
        systemctl enable amazon-ssm-agent
        systemctl start amazon-ssm-agent

        # install aws-cli
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        ## pacemaker awsvipリソース用にシンボリックリング設定
        ln -s /usr/local/bin/aws /usr/bin/aws
        ## aws cli regionの設定 ★region指定しないとawsvipリソースコマンドでerror発生するため
        REGION=`curl -s http://169.254.169.254/latest/meta-data/local-hostname | cut -d '.' -f2`
        aws configure set region $REGION

        # pacemaker setting
        systemctl start pcsd.service 
        systemctl enable pcsd.service

        # haclusterユーザのパスワード設定
        /usr/bin/passwd hacluster<<EOF 
        HaPas_123
        HaPas_123
        EOF

        # hostname設定のため再起動
        shutdown -r now
        Tags:
          - Key: Name
            Value: ec2-pacemaker-1-cf

  EC2Pacemaker2: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !Ref Ec2ImageId
      KeyName: !Ref KeyName
      InstanceType: !Ref Ec2InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: !Ref PubSubA
          PrivateIpAddress: 10.5.10.12
          GroupSet:
            - !Ref EC2PacemakerSG
      UserData: !Base64 |
        #!/bin/bash
        # hostnameとhostsの設定 
        hostnamectl set-hostname ec2-pacemaker-2-cf
        cat <<EOF | sudo tee -a /etc/hosts
        10.5.10.11 ec2-pacemaker-1-cf
        10.5.10.12 ec2-pacemaker-2-cf
        10.5.10.13 ec2-pacemaker-vip-cf
        EOF

        # set JP timezone
        timedatectl set-timezone Asia/Tokyo

        # install
        # inscall necessafy packages
        dnf update -y
        dnf install -y wget unzip
        dnf install -y fence-agents-aws jq
       
        # install and start SSM Agent
        dnf install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
        systemctl enable amazon-ssm-agent
        systemctl start amazon-ssm-agent

        # install
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        ## pacemaker awsvipリソース用にシンボリックリング設定
        ln -s /usr/local/bin/aws /usr/bin/aws
        ## aws cli regionの設定 ★region指定しないとawsvipリソースコマンドでerror発生するため
        REGION=`curl -s http://169.254.169.254/latest/meta-data/local-hostname | cut -d '.' -f2`
        aws configure set region $REGION
        
        # pacemaker setting
        systemctl start pcsd.service 
        systemctl enable pcsd.service

        # haclusterユーザのパスワード設定
        /usr/bin/passwd hacluster<<EOF 
        HaPas_123
        HaPas_123
        EOF 

        # hostname設定のため再起動
        shutdown -r now
        Tags:
          - Key: Name
            Value: ec2-pacemaker-2-cf

  # pacemaker node用SG
  EC2PacemakerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ec2-pacemaker-sg-cf
      GroupDescription: Allow SSH and http and tool
      VpcId: !Ref VPC
      SecurityGroupIngress:
        # http
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref MyIP
        # ssh
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP
        # all
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          Description: all
          CidrIp: 10.5.0.0/16
        # icmp
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          Description: ICMP
          CidrIp: 10.5.0.0/16

  EC2IAMRole: 
    Type: AWS::IAM::Role
    Properties: 
      RoleName: ec2-role-cf
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: Allow
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns: 
        # 検証用なのでAdmin権限付与
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  EC2InstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: "/"
      Roles: 
        - Ref: EC2IAMRole
      InstanceProfileName: ec2-instance-profile-cf


Outputs:
  EC2PublicIP1:
    Value: !GetAtt EC2Pacemaker1.PublicIp
    Description: Public IP of EC2 instance
  EC2PublicIP2:
    Value: !GetAtt EC2Pacemaker2.PublicIp
    Description: Public IP of EC2 instance
